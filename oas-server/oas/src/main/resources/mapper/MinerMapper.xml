<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cascv.oas.server.miner.mapper.MinerMapper">
    
    <resultMap id="MinerMap" type="com.cascv.oas.server.miner.model.MinerModel">
		<id column="miner_code" property="minerCode" />
		<result column="miner_name" property="minerName"/>
	  	<result column="miner_description" property="minerDescription"/>
	  	<result column="miner_price" property="minerPrice"/>
	  	<result column="miner_grade" property="minerGrade"/>
	  	<result column="miner_power" property="minerPower"/>
	  	<result column="miner_period" property="minerPeriod"/>
	  	<result column="order_num" property="orderNum"/>
	  	<result column="miner_purchase_status" property="minerPurchaseStatus"/>
	  	<result column="created" property="created"/>
	  	<result column="updated" property="updated"/>
    </resultMap>
        
    <sql id="miner_List">
  		miner_code, miner_name, miner_grade, miner_description, miner_price, miner_power, miner_period, order_num, created, updated
    </sql>
    
    <insert id="insertMiner" parameterType="com.cascv.oas.server.miner.model.MinerModel">
        insert into miner_source
        <trim prefix="(" suffix=")" suffixOverrides=",">
	        miner_code, miner_name, miner_grade, 
	        <if test="minerDescription != null">
	          miner_description,
	        </if>
	         miner_price, miner_power, miner_period, order_num, created, updated
	    </trim>
	    <trim prefix="values (" suffix=")" suffixOverrides=",">
	        #{minerCode}, #{minerName}, #{minerGrade},
	        <if test="minerDescription != null">
	           #{minerDescription},
	        </if>
	        #{minerPrice}, #{minerPower}, #{minerPeriod}, #{orderNum}, #{created}, #{updated}
	    </trim>            
    </insert>
    
    <select id="selectAllMiner" resultMap="MinerMap">
        select
         <include refid="miner_List" />
         from miner_source 
         order by order_num asc limit #{offset}, #{limit}
    </select>
    
    <select id="selectAllWebMiner" resultMap="MinerMap">
        select
         <include refid="miner_List" />
         from miner_source 
         order by order_num asc
    </select>
    
    <select id="inquireByMinerName" resultMap="MinerMap">
        select * from miner_source where miner_name = #{minerName}
    </select>
    
    <select id="inquireByOrderNum" resultMap="MinerMap">
        select * from miner_source where order_num = #{orderNum}
    </select>
    
    <select id="inquireByUuid" resultMap="MinerMap">
        select * from miner_source where miner_code = #{minerCode}
    </select>
    
    <select id="inquireUpdateMinerName" resultMap="MinerMap">
        select b.* from 
          (select * from miner_source
            where miner_name not in (select miner_name from miner_source where miner_name=#{minerName}))b
        where b.miner_name = #{updateMinerName}
    </select>
    
    <select id="countNum" resultType="java.lang.Integer">
  	    select count(*) from miner_source
    </select>
    
    <update id="updateMiner" parameterType="com.cascv.oas.server.miner.model.MinerModel">
        update miner_source
        set
          miner_name = #{minerName},
          miner_description = #{minerDescription},
          miner_power = #{minerPower},
          miner_price = #{minerPrice},
          miner_grade = #{minerGrade},
          miner_period = #{minerPeriod},
          updated = #{updated}
        where
          miner_code = #{minerCode}
    </update>
    
    <update id="updateOrderNum" parameterType="com.cascv.oas.server.miner.model.MinerModel">
        update miner_source
        set
          order_num = #{orderNum},
          updated = #{updated}
        where
          miner_code = #{minerCode}
    </update>
    
    <delete id="deleteMiner">
        delete from miner_source where miner_code=#{minerCode}
    </delete>    
    
    <resultMap id="purchaseRecordMap" type="com.cascv.oas.server.miner.model.PurchaseRecord">
        <result column="uuid" property="uuid"/>
		<result column="user_uuid" property="userUuid"/>
		<result column="energy_ball_uuid" property="energyBallUuid"/>
		<result column="miner_code" property="minerCode"/>
		<result column="miner_name" property="minerName"/>
	  	<result column="miner_description" property="minerDescription"/>
	  	<result column="miner_price" property="minerPrice"/>
	  	<result column="miner_grade" property="minerGrade"/>
	  	<result column="miner_num" property="minerNum"/>
	  	<result column="price_sum" property="priceSum"/>
	  	<result column="miner_power" property="minerPower"/>
	  	<result column="miner_period" property="minerPeriod"/>
	  	<result column="miner_status" property="minerStatus"/>
	  	<result column="miner_purchase_status" property="minerPurchaseStatus"/>
	  	<result column="power_reward_status" property="powerRewardStatus"/>
	  	<result column="reward_energy_ball_uuid" property="rewardEnergyBallUuid"/>
	  	<result column="finish_reward_number" property="finishRewardNumber"/>
	  	<result column="remain_time_oas" property="remainTimeOas"/>
	  	<result column="finish_reward_updated" property="finishRewardUpdated"/>
	  	<result column="created" property="created"/>
    </resultMap>
    
    <sql id="purchase_record_List">
  		uuid, user_uuid, energy_ball_uuid, miner_code, miner_name, miner_grade, 
  		miner_description, miner_price, miner_num, price_sum,miner_power,miner_period,miner_status, 
  		miner_purchase_status,power_reward_status,reward_energy_ball_uuid,finish_reward_number,remain_time_oas,finish_reward_updated,created
    </sql>
    
    <insert id="insertPurchaseRecord" parameterType="com.cascv.oas.server.miner.model.PurchaseRecord">
        insert into purchase_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
	        uuid,user_uuid, energy_ball_uuid, miner_code, miner_name, miner_grade,
	        <if test="finishRewardUpdated != null">
	          finish_reward_updated,
	        </if>
	        <if test="minerDescription != null">
	          miner_description,
	        </if>
	         miner_price, miner_num, price_sum, miner_power, 
	         miner_period, miner_status, 
	         
	          <if test="rewardEnergyBallUuid != null">
	          reward_energy_ball_uuid,
	          </if>
	          <if test="remainTimeOas != null">
	          remain_time_oas,
	          </if>
	         finish_reward_number, miner_purchase_status,power_reward_status,created
	    </trim>
	    <trim prefix="values (" suffix=")" suffixOverrides=",">
	        #{uuid}, #{userUuid}, #{energyBallUuid}, #{minerCode}, #{minerName}, #{minerGrade},
	         <if test="finishRewardUpdated != null">
	           #{finishRewardUpdated},
	        </if>
	        <if test="minerDescription != null">
	           #{minerDescription},
	        </if>
	        #{minerPrice}, #{minerNum}, #{priceSum}, #{minerPower}, 
	        #{minerPeriod}, #{minerStatus},
	        <if test="rewardEnergyBallUuid != null">
	           #{rewardEnergyBallUuid},
	        </if>
	        <if test="remainTimeOas != null">
	           #{remainTimeOas},
	        </if>
	        #{finishRewardNumber},#{minerPurchaseStatus},#{powerRewardStatus},#{created}
	    </trim>            
    </insert>
    
    <select id="selectByuserUuid" resultMap="purchaseRecordMap">
        select <include refid="purchase_record_List" /> from purchase_record 
        where user_uuid=#{userUuid}
    </select>
    
    <select id="selectUserPurchaseRecord" resultMap="purchaseRecordMap">
        select
           u.miner_name, u.miner_num, u.created, p.name
        from purchase_record u left join user_info p on u.user_uuid = p.uuid
           <if test="searchValue != null and searchValue !='' ">
    		where p.name like concat('%',#{searchValue},'%')
           </if>
        order by u.created desc
        limit #{offset}, #{limit}           
    </select>
    
    <select id="countBySearchValue" resultType="java.lang.Integer">
        select count(*) from purchase_record u left join user_info p on u.user_uuid = p.uuid
            <if test="searchValue != null and searchValue !='' ">
    		   where p.name like concat('%',#{searchValue},'%')
            </if>
    </select>
    
    <select id="inquireSumMinerNum" resultType="java.lang.Integer">
        select sum(miner_num) from purchase_record
    </select>
    
    <select id="inquireTypeMinerNum" resultType="com.cascv.oas.server.miner.wrapper.AccountTypeMiner">
        select sum(miner_num) as minerNum ,miner_name as minerName from purchase_record group by miner_name
    </select>

     <select id="selectByMinerPurchaseStatus" resultMap="purchaseRecordMap">
      select <include refid="purchase_record_List" /> from purchase_record 
       where miner_purchase_status=0;
    </select>
    
    <select id="selectByMinerStatusPowerRewardStatus" resultMap="purchaseRecordMap">
     select <include refid="purchase_record_List" /> from purchase_record 
     where miner_status=1 and power_reward_status=0;
    </select>  
    
    <select id="selectByMinerStatusPowerRewardStatusToDecrease" resultMap="purchaseRecordMap">
     select <include refid="purchase_record_List" /> from purchase_record 
     where miner_status=0 and power_reward_status=2;
    </select> 
    
   <select id="selectByuserUuidMinerStatus" resultMap="purchaseRecordMap">
    select <include refid="purchase_record_List" /> from purchase_record 
     where user_uuid=#{userUuid} and miner_status=1 order by miner_grade desc;
    </select>
    
    <select id="selectByMinerStatus" resultMap="purchaseRecordMap">
    select <include refid="purchase_record_List" /> from purchase_record 
     
    where miner_num>finish_reward_number and miner_status=1 and user_uuid=#{userUuid} 
    
    order by created asc;
    </select>
    
    <select id="selectUserUuidByMinerStatus" resultType="java.lang.String">
    select distinct user_uuid from purchase_record 
    where miner_num>finish_reward_number and miner_status=1 
    </select>
    
    <update id="updateByMinerPurchaseStatus" parameterType="com.cascv.oas.server.miner.model.PurchaseRecord">
        update purchase_record
          set miner_purchase_status = 1 
        where uuid = #{uuid}
    </update>
    
    <update id="updateByPowerRewardStatus" parameterType="com.cascv.oas.server.miner.model.PurchaseRecord">
     update purchase_record
          set power_reward_status = 1 
        where uuid = #{uuid}
    </update>
    
     <update id="updateByFinishRewardNumber" parameterType="com.cascv.oas.server.miner.model.PurchaseRecord">
     update purchase_record
          set finish_reward_number = #{finishRewardNumber} 
        where uuid = #{uuid}
    </update>
    
        <update id="updateByFinishRewardUpdated" parameterType="com.cascv.oas.server.miner.model.PurchaseRecord">
     update purchase_record
          set finish_reward_updated = #{finishRewardUpdated},remain_time_oas=#{remainTimeOas} 
        where uuid = #{uuid}
    </update>
    
        <update id="updateByPowerRewardStatusToDecrease" parameterType="com.cascv.oas.server.miner.model.PurchaseRecord">
     update purchase_record
          set power_reward_status = 3 
        where uuid = #{uuid}
    </update>
    
     <update id="updateByRewardEnergyBallUuid" parameterType="com.cascv.oas.server.miner.model.PurchaseRecord">
     update purchase_record
      set reward_energy_ball_uuid = #{rewardEnergyBallUuid} 
        where uuid = #{uuid}
    </update>
    
    <update id="updateByPowerRewardStatusRewardEnergyBallUuid" parameterType="com.cascv.oas.server.miner.model.PurchaseRecord">
     update purchase_record
     set reward_energy_ball_uuid = #{rewardEnergyBallUuid},power_reward_status=2 
      where uuid = #{uuid}
    </update>
    
     <update id="updateByMinerNumFinishRewardNumber" parameterType="com.cascv.oas.server.miner.model.PurchaseRecord">
     update purchase_record
     set finish_reward_number = #{finishRewardNumber} 
      where uuid = #{uuid}
    </update>
    
    <select id="selectByUuid" resultMap="purchaseRecordMap">
        select <include refid="purchase_record_List" /> from purchase_record 
        where uuid = #{uuid}
    </select>

    <select id="selectAllRecord" resultMap="purchaseRecordMap">
        select <include refid="purchase_record_List" /> from purchase_record
        where miner_status = 1
    </select>
    
    <select id="countByUserUuid" resultType="java.lang.Integer">
  	    select count(*) from purchase_record where user_uuid = #{userUuid}
    </select>
    
    <select id="inquerePurchaseRecord" resultMap="purchaseRecordMap">
        select
         <include refid="purchase_record_List" />
         from purchase_record where user_uuid = #{userUuid} 
         order by created desc limit #{offset}, #{limit}
    </select>
    
    <update id="updateStatusByUuid" parameterType="com.cascv.oas.server.miner.model.PurchaseRecord">
        update purchase_record
        set miner_status = 0,power_reward_status=2
        where uuid = #{uuid};
    </update>
    
    <resultMap id="SystemParameterMap" type="com.cascv.oas.server.miner.model.SystemParameterModel">
		<result column="rate" property="parameterValue"/>
		<result column="currency" property="currency"/>
	  	<result column="comment" property="comment"/>
	  	<result column="time" property="period"/>
	  	<result column="created" property="created"/>
	  	<result column="updated" property="updated"/>
    </resultMap>
    
    <insert id="insertSystemParameter" parameterType="com.cascv.oas.server.miner.model.SystemParameterModel">
        insert into exchange_rate 
	        (rate, currency, comment, time, created, updated)
	    values
	        (#{parameterValue}, #{currency}, #{comment}, #{period}, #{created}, #{updated})
    </insert>
    
<!--     <delete id="deleteSystemParameterByUuid"> -->
<!--         delete from system_parameter where uuid = #{uuid} -->
<!--     </delete> -->
    
    <select id="selectSystemParameter" resultMap="SystemParameterMap">
        select * from exchange_rate where currency = 1 or currency = 11 order by currency desc
    </select>
    
    <select id="selectSystemParameterByCurrency" resultMap="SystemParameterMap">
        select * from exchange_rate where currency = #{currency}
    </select>
    
    <update id="updateSystemParameterByUuid" parameterType="com.cascv.oas.server.miner.model.SystemParameterModel">
        update exchange_rate
         set rate = #{parameterValue},
             updated = #{updated}
         where time = #{period} and currency = #{currency}
    </update>
    
</mapper>