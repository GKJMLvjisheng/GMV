<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cascv.oas.server.blockchain.mapper.EthWalletDetailMapper">

  <resultMap id="ethWalletDetailMap" type="com.cascv.oas.server.blockchain.model.EthWalletDetail">
	<id column="uuid" property="uuid" />
	<result column="address" property="address"/>
	<result column="value" property="value" jdbcType="DECIMAL"/>
	<result column="title" property="title"/>
	<result column="sub_title" property="subTitle"/>
	<result column="in_or_out" property="inOrOut" jdbcType="INTEGER"/>
	<result column="tx_hash" property="txHash"/>
	<result column="tx_result" property="txResult"/>
	<result column="tx_network" property="txNetwork"/>
	<result column="remark" property="remark"/>
<!-- 	<result column="change_address" property="changeAddress"/> -->
	<result column="created" property="created"/>
	<result column="rest_balance" property="restBalance"/>
  </resultMap>
  
  
  <sql id="Base_Column_List">
    uuid, address, value, title, sub_title,in_or_out, tx_hash, tx_result,tx_network,remark, created,rest_balance
<!--     , change_address -->
  </sql>
  
  
  <!-- insert user -->
  <insert id="insertSelective" parameterType="com.cascv.oas.server.blockchain.model.EthWalletDetail">
    insert into eth_wallet_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
    	uuid,
    	address,
    	value,
    	<if test="title != null">
    		title,
    	</if>
    	<if test="subTitle != null">
    		sub_title,
    	</if>
    	<if test="inOrOut != null">
    		in_or_out,
    	</if>
		<if test="txHash != null">
    		tx_hash,
    	</if>
    	<if test="txResult != null">
    		tx_result,
    	</if>
    	<if test="txNetwork != null">
    		tx_network,
    	</if>
    	<if test="remark != null">
    		remark,
    	</if>
    	<if test="restBalance != null">
    		rest_balance,
    	</if>
<!--     	<if test="changeAddress != null"> -->
<!--     		change_address, -->
<!--     	</if> -->
    	created
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{uuid,jdbcType=VARCHAR},
      #{address,jdbcType=VARCHAR},
      #{value,jdbcType=DECIMAL},
    	<if test="title != null">
    		#{title,jdbcType=VARCHAR},
    	</if>
    	<if test="subTitle != null">
    		#{subTitle,jdbcType=VARCHAR},
    	</if>
    	<if test="inOrOut != null">
    		#{inOrOut,jdbcType=INTEGER},
    	</if>
    	<if test="txHash != null">
    		#{txHash,jdbcType=VARCHAR},
    	</if>
    	<if test="txResult != null">
    		#{txResult,jdbcType=INTEGER},
    	</if>
    	<if test="txNetwork != null">
    		#{txNetwork,jdbcType=VARCHAR},
    	</if>
    	<if test="remark != null">
    		#{remark,jdbcType=VARCHAR},
    	</if>
    	<if test="restBalance != null">
    		#{restBalance,jdbcType=DECIMAL},
    	</if>
    		#{created,jdbcType=VARCHAR}
    </trim>
  </insert>

  <update id="update" parameterType="com.cascv.oas.server.blockchain.model.EthWalletDetail">
  	update eth_wallet_detail 
	<trim prefix=" set " suffix="" suffixOverrides=",">
		<if test = "txResult != 0">
			tx_result = #{txResult},
		</if>
	</trim>
	where uuid = #{uuid} 
  </update>

  <!-- delete by id -->
  <delete id="deleteByUuid" parameterType="java.lang.String">
    delete from eth_wallet_detail where uuid = #{uuid}
  </delete>

  <!-- delete by userId -->
  <delete id="deleteByAddress" parameterType="java.lang.String">
    delete from eth_wallet_detail where address = #{address}
  </delete>
  
  <select id="selectCount" resultType="java.lang.Integer">
  	select count(*) from eth_wallet_detail where address = #{address};
  </select>
  
  
  
  <select id="selectEthTransactionJob" resultMap="ethWalletDetailMap">
  	select 
      <include refid="Base_Column_List" />
    from eth_wallet_detail where tx_hash &lt;&gt; '' and tx_result = 0 and tx_network = #{network} order by created desc limit 0,#{limit};
  </select>
  
  <select id="selectByPage" resultMap="ethWalletDetailMap">
  	select 
      <include refid="Base_Column_List" />
    from eth_wallet_detail where address = #{address} order by created desc limit #{offset},#{limit};
  </select>

  <select id="selectByAddress" parameterType="java.lang.String" resultMap="ethWalletDetailMap">
  	select 
      <include refid="Base_Column_List" />
    from eth_wallet_detail where address = #{address}
  </select>
  <select id="selectByInOrOut" resultMap="ethWalletDetailMap">
  	select 
      <include refid="Base_Column_List" />
    from eth_wallet_detail where address = #{address} and in_or_out = #{inOrOut} order by created desc limit #{offset},#{limit};
  </select>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.cascv.oas.server.blockchain.model.EthWalletDetail">
   update eth_wallet_detail
    <set >
    	<if test="address != null">
    		address = #{address,jdbcType=VARCHAR},
    	</if>
    	<if test="value != null">
    		value = #{value,jdbcType=DECIMAL},
    	</if>
     	<if test="title != null">
    		title = #{title,jdbcType=VARCHAR},
    	</if>
    	<if test="subTitle != null">
    		sub_title = #{subTitle,jdbcType=VARCHAR},
    	</if>
    	<if test="inOrOut != null">
    		in_or_out = #{inOrOut,jdbcType=INTEGER},
    	</if>
    	<if test="txHash != null">
    		tx_hash = #{txHash,jdbcType=VARCHAR},
    	</if>
    	<if test="remark != null">
    		remark = #{remark,jdbcType=VARCHAR},
    	</if>
    	<if test="created != null">
    		created = #{created,jdbcType=VARCHAR},
    	</if>
    	<if test="txNetwork != null">
    		tx_network = #{txNetwork,jdbcType=VARCHAR},
    	</if>
    	<if test="txResult != null">
    		tx_result = #{txResult,jdbcType=INTEGER},
    	</if>
    	<if test="restBalance != null">
	   		rest_balance = #{restBalance,jdbcType=DECIMAL},
	   	</if>
    </set>
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
  <select id="selectByUUid" resultMap="ethWalletDetailMap">
  	select  <include refid="Base_Column_List" />
  	from eth_wallet_detail
  	where uuid = #{uuid,jdbcType=VARCHAR}
  </select>
  
  <select id="selectUserByAddress" resultType="com.cascv.oas.server.user.model.UserModel">
  select b.* from eth_wallet a
  left join user_info b on a.user_uuid = b.uuid
  where a.address = #{address,jdbcType=VARCHAR}
  </select>
  
  <select id="getEthRecordByHash" resultMap="ethWalletDetailMap">
  	select <include refid="Base_Column_List" />
  	from eth_wallet_detail
  	where tx_hash = #{hash,jdbcType=VARCHAR}
  </select>
  
  <update id="updateRestBalanceByHash">
  update eth_wallet_detail
  <set>
   	<if test="restBalance != null">
   		rest_balance = #{restBalance,jdbcType=DECIMAL},
   	</if>
  </set>
  where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
  
    <select id="getSystemDetailByPage" resultMap="ethWalletDetailMap">
  select <include refid="Base_Column_List" /> 
  from eth_wallet_detail where address =(
	select address from eth_wallet where user_uuid in(
  	select uuid from user_info where name='SYSTEM'
  )limit 1)
  order by created desc limit #{offset},#{limit}   
  </select>
  
  <select id="getSystemDetailCount" resultType="java.lang.Integer">
  select count(*)
  from eth_wallet_detail where address =(
	select address from eth_wallet where user_uuid in(
  	select uuid from user_info where name='SYSTEM'
  )limit 1)
  </select>
  
  <select id="getSystemAddress" resultType="java.lang.String">
  	select address from eth_wallet 
  	where user_uuid in(
  		select uuid from user_info where name='SYSTEM'
    )
    limit 1
  </select>
</mapper>



  
  